<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnQuanli.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAR9JREFUSEvtkjFOw0AQRS2FIicKFdQk3IGCXAYkOBXiCFAkXUAcgC4KwryP/q68
        EMuZQJpon/QU5+/Mrsd2U6nsS9u2l/iKLzh1fHh8YGLlOA7N3QlmjrfC+jl+YuJPB3cn0PXISwXkc1yr
        CN5xhRde3h2axniDP1ngFX7fgH7xHhN3uPXmBqFxgk/aBT5Qk+pxLxUYXb+hphOa9tpb7A5N6V3qEW1Q
        POOpS9J0mlZTd9F7PXNZDBq771Lc4tjLBeQnqJtM/NtHNLgRNTNUT/ERcf2IiQfH/VA0xV8bRaG3wHEc
        ekMTuC7jOI77M457cVnGcRz3Zxz3Pgn/zziO4/6M43DeCzWhCfw343ivgwsc14PrwRnH9eDhgytHRtN8
        AVqFICTM37VjAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnBanhang.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAaFJREFUSEvtlr9Kw1AchUPF/4Kij6BYdO1j6K4V11afwdmxoGO7lD6BD6BzwaGz
        IjgIjlI3cRC8npN7bm+SXhBMAkLzwUd7Tm7yqzZtbzS7GGPm4BnslWQb1jTOg/Iclk1b4zwou/aYuYD3
        8Ag+wmNYFF2N86Dkv4Nw6Bjewk89FkVP4zwo+/ZYqfQ1zoNyCK9gQ5JT6PIDvEzkG+kyj3GNyzyXuHwN
        hxrnQfkODxSZSUOReQQnNweex3erIjPv2pEiM4cZReZDOFa0oFjhIrCnih0pcvA+M1hWFZc7tjPrqtiR
        IgdvMINtVXFZt51ZVcWOFDl4jRnUVcXlEuR73FR2L8TlLfgCO8oL8A7yozavrgO5ZlO5Ccmu8gnkx3SR
        eQKKAfyCT3ok3/AZfsTJ8gp5AQefs3NwLc/huSR5zYHGeVC6L5AyCX6B/JvBvJmyvkEH38/QmqxJfh+s
        OgXq5JrpX5oAWuuoBleDq8EW1Kk1fyA42G32YlSnQJ13cHCzxz11Eg7Jyq1NHloa50FZg/xN5V8eGppH
        XrMFpzf0M0IU/QDiy7IlkvrPIgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAIhJREFUOE/VlEsOgCAMBbmEZ9AYbwqEcDO9kS0p0QWfFruQ2UHfGzQazDzEGBfn
        3EZLNtjBLi0fcOC9v6y1O211wSx2qg8SQlhheELwoK0q7CwnKDk40SqIZZlScViWeQs+yzIgSF9S+gdU
        URWqvnJJMCxtFcVSToEtlZzezcJQ93JQv75+ijE3CYmxPfPbu/kAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnEye.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAahJREFUOE/tksFKQlEURV8llRQGZX9hzbJBnxB9RUjTyjQJwunzqQ9EZxJEzfyA
        pGFIH5DN0wbquD4gW/t2lEpBaNyBzb13n73PO+fd6/3HOPL5fCQMw4NSqRSAW6FcLhfEKWey2dFoNBYw
        psEADKeB4n1wKq3ZpkelUtnE8GimDmu6WCwmwIohIQ68SANa6OJm/xnVanUDwTOCD9YCYy2KZx9lzD1B
        e3HKofOlBW15xY8DwTyJewzq7MJoj452Ob+KN3RB0tIeuZx5mqphtOviyAxXRrnOVAy8gTPOGe1Zu5iX
        TSZdHcibcoSSCPsQA/5hzJGEjShhxih1lBWnnFH67zH5BfehUUHhLwV931+D04vojTvnkJIQ1B1BsI+C
        LkU0ctaKvbN2vo/M+dq8h0aNL6WpBGvOaBVNAl2EDO4pcVE7llaxS8vdDYfDOaO/QlePoA3cs2H8JfHq
        RiMKo860oglN+wTWxU8EgjjJFnDdAN3uVq1WWxWCINjmfA4/ekoPE2/wd2h8xjpB3DPTNCh3LK3ZZgfi
        CIX36cbHfCNoL045k/2H530CfPqIfJZyj54AAAAASUVORK5CYII=
</value>
  </data>
</root>